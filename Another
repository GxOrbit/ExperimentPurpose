-- GXScript Hub - Auto Middle Moon Cat Only
-- Created for educational purposes

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create main GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "GXScriptHub"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Main frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 300, 0, 150)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 50, 25)
mainFrame.BackgroundTransparency = 0
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

-- Add corner rounding
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = mainFrame

-- Title bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 12)
titleCorner.Parent = titleBar

local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, -80, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "ðŸŒ± GXScript Hub"
titleLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Parent = titleBar

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
closeButton.Text = "âœ•"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true
closeButton.Font = Enum.Font.GothamBold
closeButton.BorderSizePixel = 0
closeButton.Parent = titleBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 8)
closeCorner.Parent = closeButton

-- Minimize button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -70, 0, 5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
minimizeButton.Text = "âˆ’"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextScaled = true
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.BorderSizePixel = 0
minimizeButton.Parent = titleBar

local minimizeCorner = Instance.new("UICorner")
minimizeCorner.CornerRadius = UDim.new(0, 8)
minimizeCorner.Parent = minimizeButton

-- Auto Middle Moon Cat Button
local moonCatButton = Instance.new("TextButton")
moonCatButton.Name = "MoonCatButton"
moonCatButton.Size = UDim2.new(1, -40, 0, 50)
moonCatButton.Position = UDim2.new(0, 20, 0, 60)
moonCatButton.BackgroundColor3 = Color3.fromRGB(255, 85, 85) -- Start with red (OFF state)
moonCatButton.Text = "ðŸŒ™ Auto Middle Moon Cat [OFF]"
moonCatButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text for better visibility
moonCatButton.TextScaled = true
moonCatButton.Font = Enum.Font.GothamBold
moonCatButton.BorderSizePixel = 0
moonCatButton.Parent = mainFrame

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 10)
buttonCorner.Parent = moonCatButton

-- Status label
local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Size = UDim2.new(1, -40, 0, 25)
statusLabel.Position = UDim2.new(0, 20, 0, 120)
statusLabel.BackgroundColor3 = Color3.fromRGB(0, 100, 50)
statusLabel.Text = "Status: Ready"
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.TextScaled = true
statusLabel.Font = Enum.Font.Gotham
statusLabel.BorderSizePixel = 0
statusLabel.Parent = mainFrame

local statusCorner = Instance.new("UICorner")
statusCorner.CornerRadius = UDim.new(0, 8)
statusCorner.Parent = statusLabel

-- Toggle variables
local autoMiddleMoonCatEnabled = false

-- Status update function
local function updateStatus(text, color)
    statusLabel.Text = "Status: " .. text
    if color then
        statusLabel.BackgroundColor3 = color
    end
    wait(2)
    statusLabel.BackgroundColor3 = Color3.fromRGB(0, 100, 50)
end

-- Auto Middle Moon Cat function (Direct approach - find ANY pet near player)
local autoMiddleMoonCatConnection

local function toggleAutoMiddleMoonCat()
    autoMiddleMoonCatEnabled = not autoMiddleMoonCatEnabled
    
    if autoMiddleMoonCatEnabled then
        -- Button turns GREEN when pressed (ON state)
        moonCatButton.Text = "ðŸŒ™ Auto Middle Moon Cat [ON]"
        moonCatButton.BackgroundColor3 = Color3.fromRGB(85, 255, 85)
        moonCatButton.TextColor3 = Color3.fromRGB(0, 0, 0)
        updateStatus("Finding pets near you...", Color3.fromRGB(255, 165, 0))
        
        -- Find ALL pets near player and list them
        local nearbyPets = {}
        local moonCatPet = nil
        local moonCatPart = nil
        
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPos = player.Character.HumanoidRootPart.Position
            
            -- Search ALL objects in workspace for pets
            for _, obj in pairs(workspace:GetDescendants()) do
                if obj:IsA("Model") and obj ~= player.Character and obj:FindFirstChild("Humanoid") then
                    local petPart = obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChild("Torso") or obj:FindFirstChild("Head")
                    if petPart then
                        local distance = (petPart.Position - playerPos).Magnitude
                        if distance < 150 then -- Within 150 studs
                            table.insert(nearbyPets, {name = obj.Name, model = obj, part = petPart, distance = distance})
                        end
                    end
                end
            end
            
            -- Sort by distance (closest first)
            table.sort(nearbyPets, function(a, b) return a.distance < b.distance end)
            
            if #nearbyPets > 0 then
                -- Show what pets we found
                local petNames = {}
                for i = 1, math.min(5, #nearbyPets) do
                    table.insert(petNames, nearbyPets[i].name)
                end
                updateStatus("Found pets: " .. table.concat(petNames, ", "), Color3.fromRGB(255, 165, 0))
                wait(1)
                
                -- Look for Moon Cat first
                for _, pet in pairs(nearbyPets) do
                    if pet.name:lower():find("moon") then
                        moonCatPet = pet.model
                        moonCatPart = pet.part
                        updateStatus("Using Moon Cat: " .. pet.name, Color3.fromRGB(85, 255, 85))
                        break
                    end
                end
                
                -- If no Moon Cat found, use the closest pet
                if not moonCatPet then
                    moonCatPet = nearbyPets[1].model
                    moonCatPart = nearbyPets[1].part
                    updateStatus("Using closest pet: " .. nearbyPets[1].name, Color3.fromRGB(255, 200, 0))
                end
            else
                updateStatus("No pets found nearby. Move closer to pets.", Color3.fromRGB(255, 85, 85))
            end
        end
        
        if moonCatPet and moonCatPart then
            local humanoid = moonCatPet:FindFirstChild("Humanoid")
            
            autoMiddleMoonCatConnection = RunService.Heartbeat:Connect(function()
                if not autoMiddleMoonCatEnabled or not moonCatPet or not moonCatPart then return end
                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
                
                -- Force pet to stay in middle
                local playerPos = player.Character.HumanoidRootPart.Position
                local middlePos = Vector3.new(playerPos.X, playerPos.Y, playerPos.Z)
                
                local currentPos = moonCatPart.Position
                local distance = (Vector3.new(currentPos.X, 0, currentPos.Z) - Vector3.new(middlePos.X, 0, middlePos.Z)).Magnitude
                
                if distance > 3 then
                    -- Pet is too far, move it to middle
                    if humanoid then
                        humanoid:MoveTo(middlePos)
                        humanoid.WalkSpeed = 20
                    end
                else
                    -- Pet is in middle area, keep it there
                    if humanoid then
                        humanoid:MoveTo(middlePos) -- Keep moving to exact center
                        humanoid.WalkSpeed = 5 -- Slow movement to stay centered
                    end
                end
                
                wait(0.2)
            end)
            
            updateStatus("Pet is being controlled!", Color3.fromRGB(85, 255, 85))
        else
            updateStatus("No pets detected. Check pet distance.", Color3.fromRGB(255, 85, 85))
            autoMiddleMoonCatEnabled = false
            moonCatButton.Text = "ðŸŒ™ Auto Middle Moon Cat [OFF]"
            moonCatButton.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
        end
        
    else
        -- Turn OFF
        moonCatButton.Text = "ðŸŒ™ Auto Middle Moon Cat [OFF]"
        moonCatButton.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
        moonCatButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        updateStatus("Pet control stopped", Color3.fromRGB(255, 85, 85))
        
        if autoMiddleMoonCatConnection then
            autoMiddleMoonCatConnection:Disconnect()
            autoMiddleMoonCatConnection = nil
        end
    end
end

-- Button hover effects
moonCatButton.MouseEnter:Connect(function()
    local currentColor = moonCatButton.BackgroundColor3
    local tween = TweenService:Create(moonCatButton, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(
            math.min(currentColor.R * 255 + 30, 255),
            math.min(currentColor.G * 255 + 30, 255),
            math.min(currentColor.B * 255 + 30, 255)
        ) / 255
    })
    tween:Play()
end)

moonCatButton.MouseLeave:Connect(function()
    local originalColor = autoMiddleMoonCatEnabled and Color3.fromRGB(0, 255, 255) or Color3.fromRGB(0, 255, 200)
    local tween = TweenService:Create(moonCatButton, TweenInfo.new(0.2), {BackgroundColor3 = originalColor})
    tween:Play()
end)

-- Connect button
moonCatButton.MouseButton1Click:Connect(toggleAutoMiddleMoonCat)

-- GUI Controls
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        -- Hide the button and status bar when minimized
        moonCatButton.Visible = false
        statusLabel.Visible = false
        mainFrame:TweenSize(UDim2.new(0, 300, 0, 40), "Out", "Quad", 0.3, true)
        minimizeButton.Text = "+"
    else
        -- Show the button and status bar when restored
        moonCatButton.Visible = true
        statusLabel.Visible = true
        mainFrame:TweenSize(UDim2.new(0, 300, 0, 150), "Out", "Quad", 0.3, true)
        minimizeButton.Text = "âˆ’"
    end
end)
